openapi: 3.0.0
info:
  title: Parking Dashboard
  description: API to interact with details of parking slots.
  contact:
    email: cp.anirudh@outlook.com
  version: '1.0'
servers:
- url: http://127.0.0.1:5000/api
  variables: {}
- url: https://parking-dashboard.onrender.com/api
  variables: {}
components:
  schemas:
    Slots:
      type: object
      properties:
        building:
          type: string
        slot:
          type: integer
        status:
          type: integer
paths:
  /slots:
    get:
      summary: Getallslots
      description: Get all slots
      operationId: Getallslots
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Slots'
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
        '404':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Records not found"
      deprecated: false
      security: []
    parameters: []
  /slots/{building}/{slot}:
    post:
      summary: Addslot
      description: Add slot
      operationId: Addslot
      parameters:
      - name: building
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: slot
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Slots'
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
      deprecated: false
      security: []
    delete:
      summary: Deleteslot
      description: Delete slot
      operationId: Deleteslot
      parameters:
      - name: building
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: slot
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slots'
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
        '404':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Records not found"
      deprecated: false
      security: []
    parameters: []
  /slots/status/{building}/{slot}:
    post:
      summary: CarParked
      description: Car Parked
      operationId: CarParked
      parameters:
      - name: building
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: slot
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slots'
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
        '404':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Records not found"
      deprecated: false
      security: []
    delete:
      summary: CarRemoved
      description: Car Removed
      operationId: CarRemoved
      parameters:
      - name: building
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: slot
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Slots'
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
        '404':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Records not found"
      deprecated: false
      security: []
    parameters: []
tags: []
